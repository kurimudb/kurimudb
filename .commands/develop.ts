#!/usr/bin/env bun

import { $ } from 'bun'
import { join } from 'node:path'
import { exists, readFile } from 'node:fs/promises'
import { cwd } from 'node:process'
import fsExtra from 'fs-extra'

const tasks: Array<any> = []

tasks.push((async () => {
  await $`bun run typia generate --input src --output generated --project tsconfig.json`.cwd(join(cwd(), 'packages', 'cookbook-dto'))
  let cookbookDtoTypes = (await readFile(join(cwd(), 'packages', 'cookbook-dto', 'generated', 'cookbook-dto-types.ts'))).toString()
  let cookbookDtoChecks = (await readFile(join(cwd(), 'packages', 'cookbook-dto', 'generated', 'cookbook-dto-checks.ts'))).toString()
  const cookbookDtoWarning = `/**
  * The content of this file is automatically generated by Typia.
  * It can be edited in the /packages/cookbook-dto/src/* file, and each time you run bun run dev, the generated file will be synced to another location based on the content of the /develop.ts.
  */\n\n`
  cookbookDtoTypes = cookbookDtoWarning + cookbookDtoTypes
  cookbookDtoChecks = cookbookDtoWarning + cookbookDtoChecks
  const writePaths = [
    // cookbook
    {
      path: join(cwd(), 'packages', 'cookbook', 'src', 'utils'),
      types: true,
      checks: true,
    },
    // milkio-astra
    {
      path: join(cwd(), 'packages', 'milkio-astra', 'utils'),
      types: true,
      checks: true,
    },
    // milkio-vs-code-extension
    {
      path: join(cwd(), 'packages', 'milkio-vs-code-extension', 'src', 'utils'),
      types: true,
      checks: true,
    },
    // cookbook-ui
    {
      path: join(cwd(), 'projects', 'cookbook-ui', 'src', 'utils'),
      types: true,
      checks: true,
    },
  ]

  for (const writePath of writePaths) {
    fsExtra.ensureDirSync(writePath.path)
    if (writePath.types) await Bun.write(join(writePath.path, 'cookbook-dto-types.ts'), cookbookDtoTypes)
    if (writePath.checks) await Bun.write(join(writePath.path, 'cookbook-dto-checks.ts'), cookbookDtoChecks)
  }
})())

tasks.push((async () => {
  if (await exists(join(cwd(), '../canto-projects/projects/cookbook-ui/package.json'))) await $`cd ../canto-projects/projects/cookbook-ui && bun run build.ts`
})())

await Promise.all(tasks)

if (process.platform !== 'win32') await $`chmod +x ./node_modules/.bin/cookbook`
